{"version":3,"sources":["App.tsx","api/goodsFromServer.ts","index.tsx"],"names":["SortType","getReorderedGoods","goods","sortType","isReversed","visibleGoods","LENGTH","sort","g1","g2","length","ALPHABET","localeCompare","reverse","App","state","NONE","sortByAlphabet","setState","sortByLength","resetSortType","this","className","type","classNames","onClick","goodsFromServer","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAMKA,E,iGCNU,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,ODOK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKH,EAASM,OACZD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,OAASD,EAAGC,UAC7C,MACF,KAAKV,EAASW,SACZN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,cAAcH,MAC/C,MACF,QACEJ,EAAY,YAAOH,GAOvB,OAJIE,GACFC,EAAaQ,UAGRR,G,SAhCJL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,SAwCCc,E,4MACJC,MAAQ,CACNX,YAAY,EACZD,SAAUH,EAASgB,M,EAGrBC,eAAiB,WACf,EAAKC,SAAS,CAAEf,SAAUH,EAASW,Y,EAGrCQ,aAAe,WACb,EAAKD,SAAS,CAAEf,SAAUH,EAASM,U,EAGrCc,cAAgB,WACd,EAAKF,SAAS,CACZf,SAAUH,EAASgB,KACnBZ,YAAY,K,EAIhBS,QAAU,WACR,EAAKK,UAAS,SAAAH,GAAK,MAAK,CACtBX,YAAaW,EAAMX,gB,4CAIvB,WACE,MAAiCiB,KAAKN,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYrB,IAAaH,EAASW,WAGtCc,QAASJ,KAAKJ,eARhB,iCAaA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYrB,IAAaH,EAASM,SAGtCmB,QAASJ,KAAKF,aARhB,4BAaA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAapB,IAGjBqB,QAASJ,KAAKR,QARhB,qBAaCV,IAAaH,EAASgB,MAAQZ,EAC7B,wBACEmB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,cAHhB,mBAOE,MAGN,6BACE,6BACGnB,EACCyB,EACA,CAAEvB,WAAUC,eACZuB,KAAI,SAACC,GAAD,OACJ,oBACE,UAAQ,OADV,SAIGA,GAFIA,iB,GA3FHC,IAAMC,WAuGThB,IElJfiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c41c7d7a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport goodsFromServer from './api/goodsFromServer';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n    case SortType.ALPHABET:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n    default:\n      visibleGoods = [...goods];\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetSortType = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {sortType !== SortType.NONE || isReversed ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetSortType}\n            >\n              Reset\n            </button>\n          ) : ''}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(\n              goodsFromServer,\n              { sortType, isReversed },\n            ).map((good) => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}