{"version":3,"sources":["App.tsx","api/goodsFromServer.ts","index.tsx"],"names":["SortType","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","localeCompare","length","reverse","App","state","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","resetSortType","document","querySelectorAll","forEach","button","classList","add","this","className","type","classNames","onClick","goodsFromServer","map","good","React","Component","ReactDOM","render","getElementById"],"mappings":"iKAMKA,E,iGCNU,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,ODOK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAkBvB,OAhBiB,IAAbC,GAAmBC,IACrBC,EAAY,YAAOH,IAGJ,IAAbC,GACFE,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAGhC,IAAbL,GACFE,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAG3CN,GACFC,EAAaM,UAGRN,G,SAjCJL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,SAyCCY,E,4MACJC,MAAQ,CACNT,YAAY,EACZD,SAAUH,EAASc,M,EAGrBC,eAAiB,WACf,EAAKC,SAAS,CAAEb,SAAUH,EAASiB,Y,EAGrCC,aAAe,WACb,EAAKF,SAAS,CAAEb,SAAUH,EAASmB,U,EAGrCC,cAAgB,WACEC,SAASC,iBAAiB,UAElCC,SAAQ,SAAAC,GAAM,OAAIA,EAAOC,UAAUC,IAAI,eAE/C,EAAKV,SAAS,CACZb,SAAUH,EAASc,KACnBV,YAAY,K,EAIhBO,QAAU,WACR,EAAKK,UAAS,SAAAH,GAAK,MAAK,CACtBT,YAAaS,EAAMT,gB,4CAIvB,WACE,MAAiCuB,KAAKd,MAA9BT,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKyB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAyB,IAAb3B,IAGhB4B,QAASJ,KAAKZ,eARhB,iCAaA,wBACEc,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAyB,IAAb3B,IAGhB4B,QAASJ,KAAKT,aARhB,4BAaA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAa1B,IAGjB2B,QAASJ,KAAKhB,QARhB,qBAac,IAAbR,GAAkBC,EACjB,wBACEyB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKP,cAHhB,mBAOE,MAGN,6BACE,6BACGnB,EACC+B,EACA,CAAE7B,WAAUC,eACZ6B,KAAI,SAACC,GAAD,OACJ,oBACE,UAAQ,OADV,SAIGA,GAFIA,iB,GA/FHC,IAAMC,WA2GTxB,IEvJfyB,IAASC,OACP,cAAC,EAAD,IACAjB,SAASkB,eAAe,W","file":"static/js/main.4169a1e9.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport goodsFromServer from './api/goodsFromServer';\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  if (sortType === 0 && !isReversed) {\n    visibleGoods = [...goods];\n  }\n\n  if (sortType === 1) {\n    visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n  }\n\n  if (sortType === 2) {\n    visibleGoods.sort((g1, g2) => g1.length - g2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetSortType = () => {\n    const buttons = document.querySelectorAll('button');\n\n    buttons.forEach(button => button.classList.add('is-light'));\n\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== 1,\n              },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== 2,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {sortType !== 0 || isReversed ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetSortType}\n            >\n              Reset\n            </button>\n          ) : ''}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(\n              goodsFromServer,\n              { sortType, isReversed },\n            ).map((good) => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}